{"version":3,"sources":["./src/app/feutured/signuppage/signuppage.component.ts","./src/app/feutured/signuppage/signuppage.component.html","./src/app/feutured/user-services/loginservice.service.ts","./src/environments/environment.ts","./src/app/feutured/taskform/taskform.component.ts","./src/app/feutured/taskform/taskform.component.html","./src/app/feutured/user-services/userprofile.service.ts","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/shared/guards/auth.guard.ts","./src/app/feutured/user-services/deleteuser.service.ts","./src/app/shared/shared.module.ts","./src/app/feutured/accountsettings/accountsettings.component.ts","./src/app/feutured/accountsettings/accountsettings.component.html","./src/app/core/navbar/navbar.component.ts","./src/app/core/navbar/navbar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/feutured/user-services/logout.service.ts","./src/app/feutured/mathome/mathome.component.ts","./src/app/feutured/mathome/mathome.component.html","./src/app/app.module.ts","./src/app/feutured/task-services/deletetask.service.ts","./src/app/feutured/task-services/createtask.service.ts","./src/app/feutured/loginpage/loginpage.component.ts","./src/app/feutured/loginpage/loginpage.component.html","./src/app/feutured/task-services/gettasks.service.ts","./src/app/core/core.module.ts","./src/app/feutured/user-services/updateuser.service.ts","./src/app/feutured/task-services/gettaskbyid.service.ts","./src/app/feutured/task-services/updatetask.service.ts","./src/app/app-routing.module.ts","./src/app/feutured/user-services/signupservice.service.ts","./src/app/feutured/feutured.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\nimport { SignupserviceService } from '../user-services/signupservice.service';\r\n\r\n@Component({\r\n  selector: 'app-signuppage',\r\n  templateUrl: './signuppage.component.html',\r\n  styleUrls: ['./signuppage.component.scss']\r\n})\r\nexport class SignuppageComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder, private signup: SignupserviceService,\r\n    private router: Router) { }\r\n\r\n  signupForm: FormGroup;\r\n  submitted: boolean = false;\r\n  matchedPassword: boolean = true;\r\n\r\n  ngOnInit(): void {\r\n    this.signupForm = this.fb.group({\r\n      name: [null, Validators.required],\r\n      email: [null, Validators.required],\r\n      password: [null, [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: [null, [Validators.required, Validators.minLength(8)]]\r\n    })\r\n\r\n  }\r\n\r\n  submitSignup() {\r\n    this.submitted = true;\r\n    if (this.signupForm.controls.confirmPassword.value === this.signupForm.controls.password.value) {\r\n      this.matchedPassword = true;\r\n    }\r\n    if (this.signupForm.invalid || this.matchedPassword === false) {\r\n      return ;\r\n    } else {\r\n      //email already exists error handle\r\n      let credentials: User = this.signupForm.value\r\n      this.signup.signupUser(credentials).subscribe( value => {\r\n        localStorage.setItem('userid', value.user._id)\r\n        localStorage.setItem('token', value.token)\r\n        // console.log(value.token, value, value.user._id, value.user.name)\r\n        this.router.navigate(['home'])\r\n      })\r\n    }\r\n  }\r\n \r\n}\r\n","<div class=\"container\">\r\n    <form class=\"signupForm\" [formGroup]=\"signupForm\" (submit)=\"submitSignup()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <label id=\"header\" class=\"font-weight-bold\">Sign up</label>\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Name <span class=\"invalid\" *ngIf=\"signupForm.controls.name.invalid && submitted\">*</span></label>\r\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"inputName\"\r\n                        aria-describedby=\"name\" placeholder=\"Enter your name\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputEmail1\">Email address <span class=\"invalid\" *ngIf=\"signupForm.controls.email.invalid && submitted\">*</span></label>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"inputEmail1\"\r\n                        aria-describedby=\"email\" placeholder=\"Enter email\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputPassword1\">Password <span class=\"invalid\" *ngIf=\"signupForm.controls.password.invalid && submitted\">*</span></label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"inputPassword1\"\r\n                        placeholder=\"Password\">\r\n                </div>\r\n                <span class=\"invalid\" *ngIf=\"signupForm.get('password').errors?.minlength && submitted\">Password must be at least 8 characters!</span>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputconfirmPassword1\">Confirm password <span class=\"invalid\" *ngIf=\"signupForm.controls.password.invalid && submitted\">*</span></label>\r\n                    <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\r\n                        id=\"inputconfirmPassword1\" placeholder=\"Password\">\r\n                </div>\r\n                <span class=\"invalid\" *ngIf=\"signupForm.get('confirmPassword').errors?.minlength && submitted\">Password must be at least 8 characters!</span>\r\n                <span><br></span>\r\n                <div class=\"row\">\r\n                    <span class=\"invalid\" *ngIf=\"!matchedPassword\">Wrong password</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n            <button class=\"btn btn-danger\" [routerLink]=\"['..']\" type=\"submit\" style=\"float: right;\">Cancel</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginserviceService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  url = 'https://sleepy-fjord-54959.herokuapp.com/users/login'\r\n  loginUser(credentials): Observable<any> {\r\n    return this.http.post<any>(this.url, credentials, { observe: 'response' })\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Task } from 'src/app/shared/interfaces/task';\r\nimport { CreatetaskService } from '../task-services/createtask.service';\r\nimport { GettaskbyidService } from '../task-services/gettaskbyid.service';\r\nimport { UpdatetaskService } from '../task-services/updatetask.service';\r\n\r\n@Component({\r\n  selector: 'app-taskform',\r\n  templateUrl: './taskform.component.html',\r\n  styleUrls: ['./taskform.component.scss']\r\n})\r\nexport class TaskformComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder, private createtasks: CreatetaskService,\r\n    private router: Router, private aroute: ActivatedRoute, private gettask: GettaskbyidService,\r\n    private updatetask: UpdatetaskService) { }\r\n\r\n  // tasksForm: FormGroup;\r\n  tasks: Task;\r\n  submitted: boolean = false;\r\n  editId: string = \"\";\r\n  editBtn: boolean = false;\r\n\r\n  tasksForm: FormGroup = new FormGroup({\r\n    description: new FormControl,\r\n    projectName: new FormControl,\r\n    completed: new FormControl,\r\n    colaborators: new FormControl,\r\n    estimatedTime: new FormControl\r\n  });\r\n\r\n  ngOnInit(): void {\r\n\r\n    // if (this.aroute.queryParamMap.subscribe(value => {\r\n    //     this.editId = value.id\r\n    // })) {\r\n    //   this.editId = this.aroute.snapshot.queryParams.get('id');\r\n    //   console.log(this.editId)\r\n    // } else {\r\n\r\n    this.aroute.queryParamMap.subscribe(value => {\r\n      this.editId = value.get('id');\r\n    })\r\n    if (!(this.editId === null)) {\r\n      this.editBtn = true;\r\n      console.log(this.editId)\r\n      this.gettask.taskId(this.editId).subscribe(value => {\r\n        this.tasksForm = this.fb.group({\r\n          description: [value.description, Validators.required],\r\n          projectName: [value.projectName, Validators.required],\r\n          completed: [value.completed],\r\n          colaborators: [value.colaborators],\r\n          estimatedTime: [value.estimatedTime]\r\n        })\r\n      })\r\n    } else {\r\n      this.tasksForm = this.fb.group({\r\n        description: [null, Validators.required],\r\n        projectName: [null, Validators.required],\r\n        completed: [false],\r\n        colaborators: [null],\r\n        estimatedTime: [null]\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  submitTask() {\r\n    if (!this.tasksForm.invalid) {\r\n      this.submitted = true;\r\n      this.tasks = this.tasksForm.value\r\n      // console.log(this.tasks.completed, this.submitted)\r\n\r\n      if (this.editBtn) {\r\n        this.updatetask.updateTasks(this.editId, this.tasks).subscribe(value => {\r\n          this.router.navigate([\"home\"], { queryParams: { id: value._id } })\r\n        })\r\n      } else {\r\n        this.createtasks.createTask(this.tasks).subscribe(value => {\r\n          this.router.navigate([\"home\"], { queryParams: { id: value._id } })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"tasksForm\" [formGroup]=\"tasksForm\" (submit)=\"submitTask()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <label id=\"header\" class=\"font-weight-bold\">Tasks Form</label>\r\n                <div class=\"form-group\">\r\n                    <label for=\"description\">Description <span *ngIf=\"tasksForm.controls.description.invalid\"\r\n                            style=\"color: red;\">*</span></label>\r\n                    <input type=\"text\" formControlName=\"description\" class=\"form-control\" id=\"description\"\r\n                        aria-describedby=\"description\">\r\n                </div>\r\n                <span class=\"invalid\" *ngIf=\"tasksForm.controls.description.invalid && submitted\">This field is\r\n                    required</span>\r\n                <div class=\"form-group\">\r\n                    <label for=\"projectName\">Project name <span *ngIf=\"tasksForm.controls.description.invalid\"\r\n                            style=\"color: red;\">*</span></label>\r\n                    <input type=\"text\" formControlName=\"projectName\" class=\"form-control\" id=\"projectName\"\r\n                        aria-describedby=\"projectName\">\r\n                </div>\r\n                <span class=\"invalid\" *ngIf=\"tasksForm.controls.projectName.invalid && submitted\">This field is\r\n                    required</span>\r\n                <div class=\"form-group\">\r\n                    <label for=\"completed\">Status</label>\r\n                    <select class=\"form-control\" formControlName=\"completed\" name=\"completed\">Status\r\n                        <option ng-value=\"true\">true</option>\r\n                        <option ng-value=\"false\">false</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"colaborators\">Colaborators</label>\r\n                    <input type=\"text\" formControlName=\"colaborators\" class=\"form-control\" id=\"colaborators\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"estimatedTime\">Estimated time</label>\r\n                    <input type=\"text\" formControlName=\"estimatedTime\" class=\"form-control\" id=\"estimatedTime\"\r\n                        aria-describedby=\"estimatedTime\">\r\n                </div>\r\n                <span><br></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n            <button class=\"btn btn-danger\" [routerLink]=\"['..']\" type=\"submit\" style=\"float: right;\">Cancel</button>\r\n        </div>\r\n    </form>\r\n</div>","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserprofileService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  url = 'https://sleepy-fjord-54959.herokuapp.com/users/me'\r\n\r\n  getUserProfile(): Observable<any> {\r\n    let token = localStorage.getItem('token')\r\n    return this.http.get<any>(this.url, { observe: 'response', headers: new HttpHeaders().set('Authorization', token) })\r\n      .pipe(catchError(() => {\r\n        window.confirm(\"Login first!\");\r\n        return this.router.navigate([\"\"]);\r\n      }))\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"page-footer w-100 font-small bg-dark pt-4\">\n    <div class=\"conteiner-fluid text-center\">\n        <span class=\"footer\">This is a task reporting and managment app.</span>\n        <br>\n        <span class=\"footer-1\">Login or sign up to report your tasks to your team</span>\n    </div>\n</footer>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators'\nimport { UserprofileService } from '../../feutured/user-services/userprofile.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  authedUserd: boolean;\n\n  constructor(private route: Router, private userProfile: UserprofileService) {\n\n  }\n  //Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | boolean {\n\n    return this.userProfile.getUserProfile().pipe(map((value) => {\n      let userToken = localStorage.getItem('token');\n\n      // catchError(this.handleError)\n      if (userToken === value.body.token) {\n        return true\n      } else\n     { console.log(1)\n      window.confirm(\"Login first!\");\n      this.route.navigate([\"\"]);\n      return false}\n    }\n     ));\n  }\n  // handleError(handleError: any): any {\n  //   window.confirm(\"Login first!\");\n  //   this.route.navigate(['']);\n  // }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteuserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  url = 'https://sleepy-fjord-54959.herokuapp.com/users/me'\r\n  deleteUser(): Observable<any> {\r\n    let token = localStorage.getItem('token');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userid');\r\n    return this.http.delete<any>(this.url, { observe: 'response', headers: new HttpHeaders().set('Authorization', token) })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/shared/interfaces/user';\r\nimport { DeleteuserService } from '../user-services/deleteuser.service';\r\nimport { UpdateuserService } from '../user-services/updateuser.service';\r\nimport { UserprofileService } from '../user-services/userprofile.service';\r\n\r\n@Component({\r\n  selector: 'app-accountsettings',\r\n  templateUrl: './accountsettings.component.html',\r\n  styleUrls: ['./accountsettings.component.scss']\r\n})\r\nexport class AccountsettingsComponent implements OnInit {\r\n\r\n  updateForm: FormGroup = new FormGroup({\r\n    name: new FormControl,\r\n    email: new FormControl,\r\n    password: new FormControl,\r\n    confirmPassword: new FormControl\r\n  });\r\n\r\n  submitted: boolean = false;\r\n  matchedPassword: boolean = false;\r\n  user: User;\r\n  confirmUpdate: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder, private update: UpdateuserService,\r\n    private router: Router, private profile: UserprofileService,\r\n    private deleteacc: DeleteuserService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.profile.getUserProfile().subscribe(data => {\r\n      this.updateForm = this.fb.group({\r\n        email: [data.body.email],\r\n        name: [data.body.name],\r\n        password: [null, Validators.minLength(8)],\r\n        confirmPassword: [null, Validators.minLength(8)]\r\n      })\r\n    })\r\n  }\r\n\r\n  submitUpdate() {\r\n    this.submitted = true;\r\n    if ((this.updateForm.controls.confirmPassword.value || this.updateForm.controls.password.value) === null) {\r\n      this.confirmUpdate = false;\r\n    } else {\r\n      this.confirmUpdate = true;\r\n    }\r\n    if (this.updateForm.controls.confirmPassword.value === this.updateForm.controls.password.value) {\r\n      this.matchedPassword = true;\r\n    }\r\n\r\n\r\n    if (this.confirmUpdate && this.matchedPassword && this.updateForm.valid) {\r\n      let credentials: User = this.updateForm.value\r\n      this.update.updateUser(credentials).subscribe(value => {\r\n        localStorage.setItem('userid', value._id)\r\n        localStorage.setItem('token', value.token)\r\n        this.router.navigate(['home'])\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n\r\n  }\r\n\r\n  deleteAccount() {\r\n    this.submitted = true;\r\n    if ((this.updateForm.controls.confirmPassword.value || this.updateForm.controls.password.value) === null) {\r\n      this.confirmUpdate = false;\r\n    } else {\r\n      this.confirmUpdate = true;\r\n    }\r\n    if (this.updateForm.controls.confirmPassword.value === this.updateForm.controls.password.value) {\r\n      this.matchedPassword = true;\r\n    }\r\n    let result = window.confirm(\"Are you sure?\")\r\n    if (result && this.confirmUpdate && this.matchedPassword) {\r\n      this.deleteacc.deleteUser().subscribe(data => {\r\n        if (data.status === 200) {\r\n          console.log(data.status)\r\n          this.router.navigate([\"\"]);\r\n        }\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"updateForm\" [formGroup]=\"updateForm\" (submit)=\"submitUpdate()\">\r\n        <div class=\"row\">\r\n            <button class=\"btn btn-danger ml-auto\" id=\"deletebtn\" type=\"button\" (click)=\"deleteAccount()\">Delete\r\n                Account</button>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <label id=\"header\" class=\"font-weight-bold\">Update user<span class=\"invalid\"\r\n                        *ngIf=\"!confirmUpdate\">(Please confim your password to continue!)</span>\r\n                </label>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"inputName\"\r\n                        aria-describedby=\"name\" placeholder=\"Enter your name\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputEmail1\">Email address</label>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"inputEmail1\"\r\n                        aria-describedby=\"email\" placeholder=\"Enter email\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputPassword1\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"inputPassword1\"\r\n                        placeholder=\"Password\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputconfirmPassword1\">Confirm password</label>\r\n                    <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\r\n                        id=\"inputconfirmPassword1\" placeholder=\"Password\">\r\n                </div>\r\n                <div class=\"row\">\r\n                    <span class=\"invalid\"\r\n                        *ngIf=\"updateForm.controls.password.invalid || updateForm.controls.confirmPassword.invalid\">Password\r\n                        must be at least 8 characters</span>\r\n                    <span class=\"invalid\" *ngIf=\"submitted && !matchedPassword\">Wrong passwords!</span>\r\n                </div>\r\n                <span><br></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n            <button class=\"btn btn-danger\" [routerLink]=\"['..']\" type=\"submit\" style=\"float: right;\">Cancel</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LogoutService } from 'src/app/feutured/user-services/logout.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private logout: LogoutService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  Logout () {\n    this.logout.logout()\n    this.router.navigate([\"\"])\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <span style=\"color:rgb(224, 171, 102)\">Tasks App</span>\n    <div class=\"navbar\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['home']\"><i class=\"material-icons\">home</i></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['home/taskform']\"><i class=\"material-icons\">create</i></a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['account']\"><i class=\"material-icons\" >account_circle</i></a>\n            </li>\n            <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n                <li class=\"nav-item\">\n                    <button id=\"logoutBtn\" class=\"btn btn-outline-danger btn-sm\" type=\"button\"\n                        (click)=\"Logout()\">Logout</button>\n                </li>\n            </ul>\n        </ul>\n    </div>\n\n    <div class=\"dropdown\">\n        <button class=\"dropdownbtn\">Menu</button>\n        <ul class=\"dropdown-content\">\n            <li><a [routerLink]=\"['home']\">Home</a></li>\n            <li><a [routerLink]=\"['home/taskform']\">New task</a></li>\n            <li><a [routerLink]=\"['account']\">Account</a></li>\n            <li> <button id=\"logoutBtn\" class=\"btn btn-outline-danger btn-sm\" type=\"button\" (click)=\"Logout()\">Logout</button>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'nodeapp';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogoutService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  url = 'https://sleepy-fjord-54959.herokuapp.com/users/logout'\r\n  logout() {\r\n    let token = localStorage.getItem('token')\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userid')\r\n    return this.http.post<any>(this.url, { headers: new HttpHeaders().set('Authorization', token) })\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Task } from 'src/app/shared/interfaces/task';\nimport { DeletetaskService } from '../task-services/deletetask.service';\nimport { GettaskbyidService } from '../task-services/gettaskbyid.service';\nimport { GettasksService } from '../task-services/gettasks.service';\n\n@Component({\n  selector: 'app-mathome',\n  styleUrls: ['./mathome.component.scss'],\n  templateUrl: './mathome.component.html',\n})\nexport class MathomeComponent implements OnInit {\n\n  constructor(private gettasks: GettasksService, private del: DeletetaskService,\n    private getId: GettaskbyidService, private router: Router, private aroute: ActivatedRoute,\n    private gettaskbyid: GettaskbyidService) { }\n\n\n  TaskData: Task[] = [];\n  editId: string = \"\";\n\n  displayedColumns: string[] = ['description', 'projectName', 'completed', 'estimatedTime', 'colaborators', 'created', 'actions'];\n  // dataSource = this.TaskData\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  ngOnInit(): void {\n\n    // this.aroute.queryParamMap.subscribe(value => {\n    //   this.editId = value.get('id');\n    // })\n\n    // if (this.editId != null) {\n    //   edited\n    // }\n\n    this.gettasks.getTasks().subscribe(value => {\n      // console.log(value)\n      this.TaskData = value;\n      this.dataSource = new MatTableDataSource(this.TaskData)\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      // console.log(this.TaskData)\n      // console.log(this.dataSource)\n    })\n  }\n\n  editTask(item) {\n    this.getId.taskId(item._id).subscribe(() => {\n      this.router.navigate([\"home/taskform\"], { queryParams: { id: item._id } })\n    })\n  }\n\n\n  deleteTask(item) {\n    console.log(item)\n    let result = window.confirm(\"Are you sure?\")\n    if (result) {\n      this.TaskData = [];\n      this.del.delTask(item._id).subscribe();\n      this.gettasks.getTasks().subscribe(value => {\n        this.TaskData = value\n        this.dataSource = new MatTableDataSource(this.TaskData)\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        // this.router.onSameUrlNavigation = 'reload';\n        window.location.reload();\n      })\n    }\n  }\n\n}\n\n// const TaskData: Task[] = [];\n  // { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  // displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n\n","<div class=\"container\">\n    <table matSort id=\"table\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"headers\"> Description </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"projectName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"headers\"> Project Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.projectName}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"completed\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"headers\"> Status </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.completed}} </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"estimatedTime\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"headers\"> Estimated time </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.estimatedTime}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"colaborators\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"headers\"> colaborators </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.colaborators}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"created\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"headers\"> Created </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.created}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef class=\"headers\"> Actions </th>\n            <mat-cell *matCellDef=\"let row\">\n                <button mat-raised-button color=\"accent\" (click)=\"editTask(row)\">Edit</button>\n                <button mat-raised-button color=\"warn\" (click)=\"deleteTask(row)\">Delete</button>\n            </mat-cell>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n    <mat-paginator id=\"page\" [length]=\"100\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from '@src/app/app-routing.module';\r\nimport { AppComponent } from '@src/app/app.component';\r\nimport { FeuturedModule } from '@src/app/feutured/feutured.module';\r\nimport { SharedModule } from '@src/app/shared/shared.module';\r\nimport { CoreModule } from '@src/app/core/core.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FeuturedModule,\r\n    SharedModule,\r\n    CoreModule,\r\n    NoopAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [HttpClientModule],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeletetaskService {\n\n  constructor(private http: HttpClient) { }\n\n  url = 'https://sleepy-fjord-54959.herokuapp.com/tasks/'\n\n  delTask (id): Observable<any> {\n    return this.http.delete<any>(this.url + id)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreatetaskService {\n\n  constructor(private http: HttpClient) { }\n\n  url = 'https://sleepy-fjord-54959.herokuapp.com/tasks'\n\n  createTask(tasks): Observable<any> {\n    return this.http.post<any>(this.url, tasks)\n  }\n}\n","import { error } from '@angular/compiler/src/util';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginserviceService } from '../user-services/loginservice.service';\r\nimport { UserprofileService } from '../user-services/userprofile.service';\r\n\r\n@Component({\r\n  selector: 'app-loginpage',\r\n  templateUrl: './loginpage.component.html',\r\n  styleUrls: ['./loginpage.component.scss']\r\n})\r\nexport class LoginpageComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder, private login: LoginserviceService,\r\n    private router: Router, private userProfile: UserprofileService) { }\r\n\r\n  loginForm: FormGroup;\r\n  wrongCredentials: boolean;\r\n  submitted: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    // this.wrongCredentials = false;\r\n    this.loginForm = this.fb.group({\r\n      email: [null, Validators.required],\r\n      password: [null, Validators.required]\r\n\r\n    })\r\n  }\r\n\r\n  submitLogin() {\r\n    this.submitted = true;\r\n    let user = this.loginForm.value\r\n    this.login.loginUser(user).subscribe((data) => {\r\n      // console.log(1)\r\n      // console.log(data.body.user._id, data.body.token)\r\n      if (data.status === 200) {\r\n        localStorage.setItem('userid', data.body.user._id)\r\n        localStorage.setItem('token', data.body.token)\r\n        this.router.navigate(['home'])\r\n      } \r\n    }, error => {\r\n      this.wrongCredentials = true; console.log(error)\r\n    })\r\n    console.log(2)\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form class=\"loginForm\" [formGroup]=\"loginForm\" (submit)=\"submitLogin()\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <label id=\"header\" class=\"font-weight-bold\">Login</label>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputEmail1\">Email address</label>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"inputEmail1\"\r\n                        aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\r\n                </div>\r\n                <span class=\"invalid\" *ngIf=\"loginForm.controls.email.invalid && submitted\">This field is required</span>\r\n                <div class=\"form-group\">\r\n                    <label for=\"inputPassword1\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"inputPassword1\"\r\n                        placeholder=\"Password\">\r\n                </div>\r\n                <span class=\"invalid\" *ngIf=\"loginForm.controls.password.invalid && submitted\">This field is required</span>\r\n                <span><br></span>\r\n                <button class=\"btn btn-dark\"  type=\"submit\">Submit</button>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"row\">\r\n            <span class=\"invalid\" *ngIf=\"wrongCredentials && submitted\">Wrong email or password</span>\r\n        </div>\r\n        <div class=\"row\">\r\n            <label>Dont have account?<a [routerLink]=\"'signup'\">  Sign up</a></label>\r\n        </div>\r\n    </form>\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from 'src/app/shared/interfaces/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GettasksService {\n\n  constructor(private http: HttpClient) { }\n\n  url = 'https://sleepy-fjord-54959.herokuapp.com/tasks'\n  getTasks(): Observable<any> {\n\n    return this.http.get<any>(this.url)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './footer/footer.component';\n\n\n\n@NgModule({\n  declarations: [NavbarComponent, FooterComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule\n  ],\n  exports: [NavbarComponent, FooterComponent]\n})\nexport class CoreModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpdateuserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  url = 'https://sleepy-fjord-54959.herokuapp.com/users/me'\r\n  updateUser(credentials): Observable<any> {\r\n    let token = localStorage.getItem('token')\r\n    console.log(token)\r\n    return this.http.patch<any>(this.url, credentials, {  headers: new HttpHeaders().set('Authorization', token) })\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GettaskbyidService {\n\n  constructor(private http: HttpClient) { }\n\n  url = 'https://sleepy-fjord-54959.herokuapp.com/tasks/'\n\n  taskId(id): Observable<any> {\n    return this.http.get<any>(this.url + id)\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdatetaskService {\n\n  constructor(private http: HttpClient) { }\n\n  url = 'https://sleepy-fjord-54959.herokuapp.com/tasks/'\n  updateTasks(id, credentials): Observable<any> {\n    return this.http.patch<any>(this.url + id, credentials)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountsettingsComponent } from './feutured/accountsettings/accountsettings.component';\nimport { LoginpageComponent } from './feutured/loginpage/loginpage.component';\nimport { MathomeComponent } from './feutured/mathome/mathome.component';\nimport { SignuppageComponent } from './feutured/signuppage/signuppage.component';\nimport { TaskformComponent } from './feutured/taskform/taskform.component';\nimport { AuthGuard } from './shared/guards/auth.guard';\n\nconst routes: Routes = [{\n  path: \"\", component: LoginpageComponent\n},\n{\n  path: \"signup\", component: SignuppageComponent\n},\n{\n  path: \"home\", component: MathomeComponent, canActivate:[AuthGuard]\n},\n{\n  path: \"home/taskform\", component: TaskformComponent, canActivate:[AuthGuard]\n},\n{\n  path: \"account\",  component: AccountsettingsComponent, canActivate:[AuthGuard]\n}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../../shared/interfaces/user'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupserviceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  url = 'https://sleepy-fjord-54959.herokuapp.com/users'\r\n  signupUser(credentials): Observable<any> {\r\n    return this.http.post<User>(this.url, credentials)\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginpageComponent } from './loginpage/loginpage.component';\r\nimport {  FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SignuppageComponent } from './signuppage/signuppage.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AccountsettingsComponent } from './accountsettings/accountsettings.component';\r\nimport { TaskformComponent } from './taskform/taskform.component';\r\nimport { MathomeComponent } from './mathome/mathome.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginpageComponent, SignuppageComponent, AccountsettingsComponent, TaskformComponent, MathomeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatButtonModule\r\n  ],\r\n  exports: [LoginpageComponent, SignuppageComponent, AccountsettingsComponent, TaskformComponent, MathomeComponent, MatTableModule, MatPaginatorModule, MatSortModule, MatButtonModule]\r\n})\r\nexport class FeuturedModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}